
import java.awt.BorderLayout;
import java.awt.Container;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Heng Wai
 */
public class CarShowRoomPanel extends javax.swing.JPanel {

    /**
     * Creates new form showRoomJPanel
     */
    private static boolean start= false;
    private int carPositionX=0; //Incremental value to change x position of the car graphic
    private Timer timer;
    int timesMove=1;// Number of times car move
    public CarShowRoomPanel() {
        
        initComponents();
        
        timer = new Timer(0, new ActionListener() {
        
        public void actionPerformed(ActionEvent ae) {
        
        
        carPositionX = carPositionX+10;

        repaint();
        ++timesMove;
        if(timesMove>81) // Make sure the car does not go beyond boundary
        {
            carPositionX=0;
            timesMove=1;
            
        }
        
    }
});
        
    }
    
    public void paintComponent(Graphics g)
    {
        int panelWidth = this.getWidth();
        super.paintComponent(g);
       new WindowDrawer().draw(g, carPositionX,panelWidth);
       new BodyDrawer().draw(g, carPositionX, panelWidth);
       new TyreDrawer().draw(g, carPositionX, panelWidth);
        
        
    }
    
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        startBtn = new javax.swing.JButton();
        speedmeterLabel = new javax.swing.JLabel();
        speedTextField = new javax.swing.JTextField();

        startBtn.setText("Start");
        startBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startBtnActionPerformed(evt);
            }
        });

        speedmeterLabel.setText("Speed (km/h)");

        speedTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                speedTextFieldActionPerformed(evt);
            }
        });
        speedTextField.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                speedTextFieldInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        speedTextField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                speedTextFieldPropertyChange(evt);
            }
        });
        speedTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                speedTextFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(startBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(speedmeterLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(speedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(175, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(401, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startBtn)
                    .addComponent(speedmeterLabel)
                    .addComponent(speedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void startBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startBtnActionPerformed
        
        start=!start;
        
        if(start==true){
            timer.start();
            this.startBtn.setText("Stop");
            speedTextField.setEditable(false);
             try{
                timer.setDelay(3000/Integer.parseInt(this.speedTextField.getText()));
                     
                }catch(NumberFormatException exception){
        
                    timer.setDelay(3000/100);
                    this.speedTextField.setText("100");
                    JOptionPane.showMessageDialog(null,"Please enter a valid number format, default speed reset to 100 km/h", "Error",JOptionPane.ERROR_MESSAGE);
            
                    
        }
            
        }
        
        else{
            timer.stop();
            this.startBtn.setText("Start");
            speedTextField.setEditable(true);
        }
        
        
    }//GEN-LAST:event_startBtnActionPerformed

    private void speedTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_speedTextFieldActionPerformed
       
       
       
    }//GEN-LAST:event_speedTextFieldActionPerformed

    private void speedTextFieldInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_speedTextFieldInputMethodTextChanged
        // TODO add your handling code here:
        timer.start();
       
       timer.setDelay(Integer.parseInt(speedTextField.getText())/50);
    }//GEN-LAST:event_speedTextFieldInputMethodTextChanged

    private void speedTextFieldPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_speedTextFieldPropertyChange
        
    }//GEN-LAST:event_speedTextFieldPropertyChange

    private void speedTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_speedTextFieldKeyTyped
        // TODO add your handling code here:
       
    }//GEN-LAST:event_speedTextFieldKeyTyped

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField speedTextField;
    private javax.swing.JLabel speedmeterLabel;
    private javax.swing.JButton startBtn;
    // End of variables declaration//GEN-END:variables
}
